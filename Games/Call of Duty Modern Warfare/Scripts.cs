using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ProjectRunningFox.Games.Call_of_Duty_Modern_Warfare
{
    class Scripts
    {
        public static void Cbuf_AddText(string text)
        {
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0x7E, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x82, 0x15, 0x4C, 0x54, 0x60, 0x30, 0x32, 0xC0, 0x22, 0x15, 0x5C, 0x54, 0x63, 0x10, 0x3A, 0x7C, 0x63, 0x02, 0x14, 0x7C, 0x63, 0xE2, 0x14, 0x78, 0x63, 0x00, 0x20, 0x4B, 0xFE, 0xB9, 0x51, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x1E, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x83, 0xBE, 0x00, 0x00, 0xD8, 0x01, 0x04, 0x90, 0x7C, 0x7B, 0x1B, 0x78, 0x57, 0xA0, 0x30, 0x32, 0xE8, 0x81, 0x04, 0x90, 0x57, 0xBD, 0x10, 0x3A, 0x80, 0x62, 0x17, 0x10, 0x7F, 0xBD, 0x02, 0x14, 0x7F, 0xBD, 0xE2, 0x14, 0x48, 0x01, 0xAD, 0x85, 0x60, 0x00, 0x00, 0x00, 0x38, 0xA0, 0xFF, 0xFF, 0x81, 0x62, 0x15, 0x50, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x22, 0x15, 0x98, 0x38, 0x00, 0x00, 0x00, 0xC0, 0x42, 0x16, 0x98, 0x7B, 0xA3, 0x00, 0x20, 0xC0, 0x62, 0x15, 0x5C, 0x78, 0xA5, 0x00, 0x60, 0x7B, 0x66, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xF9, 0x61, 0x00, 0x78, 0xF8, 0x01, 0x00, 0x80, 0x4B, 0xFE, 0xBC, 0x85, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xFF, 0x00, 0x7C, 0xA4, 0x2B, 0x78, 0x7C, 0x08, 0x02, 0xA6, 0xF8, 0x21, 0xFE, 0x71, 0xFB, 0xA1, 0x01, 0x78, 0xFB, 0xE1, 0x01, 0x88, 0x7C, 0xBD, 0x2B, 0x78, 0xF8, 0x01, 0x01, 0xA0, 0x4B, 0xFF, 0x98, 0x05, 0x38, 0x01, 0x00, 0x70, 0x7C, 0x7F, 0x1B, 0x78 };
            byte[] RPCON = new byte[] { 0x38, 0x60, 0x00, 0x00, 0x3C, 0x80, 0x50, 0x05, 0x30, 0x84, 0x00, 0x00, 0x4B, 0xF9, 0x8D, 0x69, 0x4B, 0xFF, 0xFF, 0xA4, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x7C, 0xA4, 0x2B, 0x78, 0x7C, 0x08, 0x02, 0xA6, 0xF8, 0x21, 0xFE, 0x71 };
            byte[] RPCON1 = new byte[] { 0x41 };
            byte[] RPCOFF2 = new byte[] { 0x40 };
            byte[] mw1cbuf = new byte[] { };
            mw1cbuf = Encoding.UTF8.GetBytes(text);
            Form1.PS3.SetMemory(0x50050000, mw1cbuf);
            Form1.PS3.SetMemory(0x1C5E40, RPCON1);
            Form1.PS3.SetMemory(0x1C5EA4, RPCON);
            System.Threading.Thread.Sleep(15);
            Form1.PS3.SetMemory(0x1C5E40, RPCOFF2);
            Form1.PS3.SetMemory(0x1C5EA4, RPCOFF);
            Form1.PS3.SetMemory(0x50050000, DFT);
        }


        public static bool Notify = false;

        public class RPCText
        {
            public static void Set(int Client, string Text)
            {
                if (Notify == true)
                {
                    iPrintln(Client, Text);
                }
            }
        }

        public static string GetNames(int clientIndex)
        {
            if (Form1.PS3.Extension.ReadByte(ProjectRunningFox.Games.Call_of_Duty_Modern_Warfare.Offsets.Client.GetNames + ((uint)clientIndex * ProjectRunningFox.Games.Call_of_Duty_Modern_Warfare.Offsets.Client.Interval)) == 0x00)
            {
                return "Not Connected";
            }
            else
            {
                return Form1.PS3.Extension.ReadString(ProjectRunningFox.Games.Call_of_Duty_Modern_Warfare.Offsets.Client.GetNames + ((uint)clientIndex * ProjectRunningFox.Games.Call_of_Duty_Modern_Warfare.Offsets.Client.Interval));
            }
        }
        public static void SV_GameSendServerCommand(int client, string text)
        {
            byte[] DFT = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            byte[] RPCOFF = new byte[] { 0x80, 0x7E, 0x00, 0x00, 0x38, 0x80, 0x00, 0x00, 0x83, 0x82, 0x15, 0x4C, 0x54, 0x60, 0x30, 0x32, 0xC0, 0x22, 0x15, 0x5C, 0x54, 0x63, 0x10, 0x3A, 0x7C, 0x63, 0x02, 0x14, 0x7C, 0x63, 0xE2, 0x14, 0x78, 0x63, 0x00, 0x20, 0x4B, 0xFE, 0xB9, 0x51, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x1E, 0x00, 0x28, 0xFC, 0x20, 0x00, 0x90, 0x83, 0xBE, 0x00, 0x00, 0xD8, 0x01, 0x04, 0x90, 0x7C, 0x7B, 0x1B, 0x78, 0x57, 0xA0, 0x30, 0x32, 0xE8, 0x81, 0x04, 0x90, 0x57, 0xBD, 0x10, 0x3A, 0x80, 0x62, 0x17, 0x10, 0x7F, 0xBD, 0x02, 0x14, 0x7F, 0xBD, 0xE2, 0x14, 0x48, 0x01, 0xAD, 0x85, 0x60, 0x00, 0x00, 0x00, 0x38, 0xA0, 0xFF, 0xFF, 0x81, 0x62, 0x15, 0x50, 0x78, 0x64, 0x00, 0x20, 0xC0, 0x22, 0x15, 0x98, 0x38, 0x00, 0x00, 0x00, 0xC0, 0x42, 0x16, 0x98, 0x7B, 0xA3, 0x00, 0x20, 0xC0, 0x62, 0x15, 0x5C, 0x78, 0xA5, 0x00, 0x60, 0x7B, 0x66, 0x00, 0x20, 0x39, 0x20, 0x00, 0x00, 0x39, 0x40, 0x00, 0x00, 0xF9, 0x61, 0x00, 0x78, 0xF8, 0x01, 0x00, 0x80, 0x4B, 0xFE, 0xBC, 0x85, 0x60, 0x00, 0x00, 0x00, 0x4B, 0xFF, 0xFF, 0x00, 0x7C, 0xA4, 0x2B, 0x78, 0x7C, 0x08, 0x02, 0xA6, 0xF8, 0x21, 0xFE, 0x71, 0xFB, 0xA1, 0x01, 0x78, 0xFB, 0xE1, 0x01, 0x88, 0x7C, 0xBD, 0x2B, 0x78, 0xF8, 0x01, 0x01, 0xA0, 0x4B, 0xFF, 0x98, 0x05, 0x38, 0x01, 0x00, 0x70, 0x7C, 0x7F, 0x1B, 0x78 };
            byte[] RPCON = new byte[] { 0x38, 0x60, 0xFF, 0xFF, 0x38, 0x80, 0x00, 0x00, 0x3C, 0xA0, 0x50, 0x05, 0x30, 0xA5, 0x00, 0x00, 0x4B, 0xFD, 0x5A, 0x85, 0x4B, 0xFF, 0xFF, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x7C, 0xA4, 0x2B, 0x78, 0x7C, 0x08, 0x02, 0xA6, 0xF8, 0x21, 0xFE, 0x71 };
            byte[] RPCON1 = new byte[] { 0x41 };
            byte[] RPCOFF2 = new byte[] { 0x40 };
            byte[] sv = new byte[] { };
            sv = Encoding.UTF8.GetBytes(text);
            Form1.PS3.SetMemory(0x50050000, sv);
            Form1.PS3.SetMemory(0x1C5E40, RPCON1);
            Form1.PS3.SetMemory(0x1C5EA4, RPCON);
            System.Threading.Thread.Sleep(15);
            Form1.PS3.SetMemory(0x1C5E40, RPCOFF2);
            Form1.PS3.SetMemory(0x1C5EA4, RPCOFF);
            Form1.PS3.SetMemory(0x50050000, DFT);
        }

        public static void iPrintln(int client, string input)
        {
            SV_GameSendServerCommand(client, "c \"" + input + "\"");
        }
        public static void SetDvar(int client, string input)
        {
            SV_GameSendServerCommand(client, "v \"" + input + "\"");
        }
        public static void iPrintlnBold(int clientNumber, string input)
        {
            SV_GameSendServerCommand(clientNumber, "e \"" + input + "\"");
        }

        public static void FreezePS3(int clientNumber, string input)
        {
            SV_GameSendServerCommand(clientNumber, "j \"" + input + "\"");
        }
    }
}
